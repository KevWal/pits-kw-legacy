# Disable HDMI/Composite outputs
disable_monitor=Y

# Enable Buoy mode below X meters
#buoy_below=1100

# Logging options, comma separated, GPS and Telemetry
# GPS = write all gps strings to gps.txt
# Telemetry = write all telemetry strings to telemetry.txt
logging=GPS,Telemetry

# Log file 'latest.txt' updated every X seconds with Sats, Alt and Temp
#telemetry_file_update=60

# Enable Pressure sensors
enable_bmp085=N
enable_bme280=N
enable_ms5611=N

# Build a UKHAS string for this payload ID and sends to pipe "pits_pipe"
#pipe_payload=CHANGEMEPIPE

# Enable external DS18B20
# Note, seems to find my external DS18B20 reguardless of this value
external_temperature=1

# Disabled Analogue to Digital converter
Disable_ADC=N
Enable_ADC_Volt=Y

# Set maximum ADC value for scaling purposes
adc_vmax=12.208

# If RTTY is not disabled, on startup send IP Address and SD Card Free space messages X times
info_messages=2
Send_Field_List=N


##############
# RTTY Config

# Disable RTTY Mode, ignoring any RTTY Channels
Disable_RTTY=Y

# RTTY settings:
#payload=CHANGEME
#frequency=434.250
#baud=300

# XX
#quiet_rtty_for_uplink=0


########################
# Generic Camera config

# Enable Camera and set camera type
# 1/Y/T = CSI Pi Camera - raspistill; F/U = USB webcam - fswebcam; 
# G = USB camera - gphoto2; P = Python Script eg for GoPro
camera=Y

# Custom camera parameters for raspistill command
#camera_settings=

# Custom SSDV parameters for ssdv command
# eg -q to set the JPEG quality level (0 to 7, defaults to 4)
#SSDV_settings= -q 5

# Image size changes at X meters
high=500


#####################
# RTTY Camera Config

# If RTTY not disabled, RTTY Low altitude image width & height
#low_width=320
#low_height=240

# If RTTY not disabled, RTTY  High altitude image width & height
#high_width=640
#high_height=480

# If RTTY not disabled, send 1 telemetry packet every X image packets
#image_packets=4

# Seconds between RTTY photographs
#image_period=60


#########################
# Full size image config

# Low altitude image width & height
# 0 in either of the following tells the software to use full resolution from the Pi camera
full_low_width=0
full_low_height=0

# High altitude image width & height
# 0 in either of the following tells the software to use full resolution from the Pi camera
full_high_width=0
full_high_height=0

# Seconds between full-sized images
# 0 disables full-sized images
full_image_period=30


#############
# GPS config

# If set, replay flight from named GPS Log file
# Mut have a valid real GPS input too for timing
#gps_source=../nmea/AASQ2-15Mins.NMEA
#gps_source=../nmea/Friday-No-GSV-VTG.NMEA
#gps_source=../nmea/XABEN11-GGA-Only.NMEA

# GPS Model, U = UBlox, M = PMTK (ie L80)
gps_model=U

# Print GPS strings to console
show_gps=0

# Serial GPS device, ie /dev/ttyAMA0
gps_device=/dev/ttyAMA0

# I2C SDA / SCL pin overrides, only used if serial gps_device is not set
#SDA=
#SCL=

# Enable GPS power saving mode
Power_Saving=N

# Switch GPS to flight mode above X meters 
Flight_Mode_Altitude=1500


############################
# Landing prediction config

# Turn on landing prediction code
landing_prediction=Y

# Parachute area
# https://www.apogeerockets.com/education/downloads/Newsletter449.pdf
cd_area=0.12

# Payload weight in kg
payload_weight=0.12

# Expected landing altitude in meters (ie ground height above sea level)
Target_Altitude=100

# Enables a separate UKHAS sentence for the predicted landing location
# (rather than adding the prediction onto the normal sentence)
#prediction_id=CHANGEME



#################
# Cutdown config

# Enable cutdown code
Enable_Cutdown=0

# Cut down code inactive below X meters
#Min_Cutdown_Altitude=0

# Cut down triggers at X meters
#CutdownAltitude=

# Cutdown Lat / Log options
#Cutdown_Latitude=
#Cutdown_Longitude=

# Cutdown in which direction from set Lat / Long (ie N, NE, E, SE, etc)
#Cutdown_Test=

# Cutdown will trigger X minutes after launch
#Cutdown_Time_Since_Launch=

# Cutdown will trigger after balloon burst is detected
#Cutdown_Burst=

# Cutdown pin is turned on for X second
#Cutdown_Period=

# Cutdown gpio pin is X
#Cutdown_Pin=



# CSV file of additional fields to add to UKHAS sentence
#external_data=


# Enabled PCM Strobe Light on pin X after descending below X meters
#Strobe_Pin=
#Strobe_Alt=2000

# Enabled Piezo Buzzer on pin %d after descending below %d meters
Piezo_Pin=4
Piezo_Alt=750


##############
# APRS config

# Set Callsign, ID and Period to enable APRS
#APRS_Callsign=CHANGEME
#APRS_ID=11
#APRS_Period=1
#APRS_Offset=0
#APRS_Random=5
#APRS_HighPath=0
#APRS_Altitude=0
#APRS_Preemphasis=0
#APRS_Telemetry=0


#############
# LORA config

LORA_Frequency_0=434.712
#LORA_PPM_0=0
LORA_Payload_0=KW01
LORA_Mode_0=1

# LORA module pins
LORA_DIO0_0=23
LORA_DIO5_0=29
#LORA_CS_0=0
#LORA_RST=0

# OV5647 aka Pi Cam v1 = Max 2592 x 1944
LORA_low_width_0=1024
LORA_low_height_0=768
LORA_high_width_0=1280
LORA_high_height_0=960

# Send a Telemetry packet every X image packets
# Ignored below 'high' meters and telemetry sent every other packet
LORA_image_packets_0=11

# Seconds between taking LORA photographs and then choose best pic to send
LORA_image_period_0=15

# TDM mode
#LORA_Cycle_0=0
#LORA_Slot_0=0
#LORA_Repeat_0=-1
#LORA_Uplink_0=0

# Send LORA packet only every x milliseconds
#LORA_PacketEvery_0=0

# Choose between ASCII (neither set), HABPack or Binary
LORA_HABPack_0=0
LORA_Binary_0=0

# Do not transmit with this LORA module
#LORA_ListenOnly=N

# LORA Uplink settings - see http://www.daveakerman.com/?p=2790
# Listen for the first 5 seconds of each 60 seconds
# Not setting LORA_Uplink_Period or LORA_Uplink_Cycle disables LORA_Uplink feature
LORA_Uplink_Period_0=5
LORA_Uplink_Cycle_0=60
LORA_Uplink_Mode_0=6
LORA_Uplink_Frequency_0=434.737
# Uplink encryption key
#UplinkCode=


# Adds extra UKHAS sentence field for LastCommand
LORA_Message_Status_0=Y
# Adds extra fields to UKHAS sentence for LastPacketRSSI, LastPacketSNR & PacketCount
LORA_RSSI_Status_0=Y

# Allow overrides of LORA settings from LORA Mode
#LORA_SF_0=
#LORA_Bandwidth_0=
#LORA_Implicit_0=
#LORA_Coding_0=
#LORA_LowOpt_0=

# 0x88 (136) is PA_MAX_UK, PA_MAX_BOOST = 0x8F (143)
LORA_Power_0=143

# Calling mode - see http://www.daveakerman.com/?p=1816
LORA_Calling_Frequency_0=433.650
# After every X normal LORA telemetry messages, send our calling frequency messages
LORA_Calling_Count_0=50
# Limit Calling mode packets to slot X
#LORA_Calling_Slot_0=


# Send RTTY using the LORA module, set 50 or 300 baud to enable
# LORA_RTTY_Baud is the enabling flag, without this LORA_RTTY is not enabled
#LORA_RTTY_Baud_0=50
# Frequency defaults to LoRaDevices[LoRaChannel].Frequency
#LORA_RTTY_Frequency_0=434.737
#LORA_RTTY_Shift_0=488

# Send LORA_RTTY_Count sentences for every LORA_RTTY_Every LORA packets 
#LORA_RTTY_Count_0=2
#LORA_RTTY_Every_0=10
#LORA_RTTY_Preamble=8


# Second LORA module
#LORA_Frequency_1=434.275
#LORA_Payload_1=CHANGEME
#LORA_Mode_1=1
#LORA_Calling_Frequency_1=433.650
#LORA_Calling_Count_1=5
